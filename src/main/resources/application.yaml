wes:
  service-info:
    auth-instruction-url: "${wes.auth.token-issuers[0].issuer-uri}/.well-known/openid-configuration"
    supported-wes-versions:
      - "1.0.0"
    supported-file-system-protocols:
      - "file"
      - "drs"
    workflow-engine-versions:
      cromwell: 47
    workflow-type-versions:
      WDL:
        - "draft-2"
        - "1.0"
    tags:
      object-access-token-attachment-name: "tokens.json"
      cromwell-options-attachment-name: "options.json"
      dependencies-zip-attachment-name: "dependencies.zip"
  drs:
    supported-access-types:
      - file
  blob-storage-client:
    name: LOCAL
    gcp:
      project:
      stagingLocation:
    abs:
      container:
      connection-string:
      staging-path:
    local:
      staging-path: /home/patrick/tools/cromwell/v54/uploads

  transfer:
    enabled: false
    object-transfer-uri:
    # Needs to be set
    staging-directory:
  auth:
    # Defaults included in wallet dev setup
    service-account-authentication-uri: http://localhost:8081/oauth/token
    service-account-client-id: wes-service
    service-account-secret: wes-service
    token-issuers:
      # Default Token issuer to use
      - issuer-uri: http://localhost:8081
        jwk-set-uri: http://localhost:8081/oauth/jwks
        audiences:
          - http://localhost:8090
          - http://wes-service.local
          - http://wes.local
          - wes.local
    validator:
      policy-evaluation-requester: ${info.app.url}
      policy-evaluation-uri: ${wes.auth.token-issuers[0].issuer-uri}/policies/evaluations
  enable-multi-tenant-support: false
  cromwell:
    defaultWorkflowOptions:
      write_to_cache: false
      read_from_cache: false
# Auditing
auditing:
  enabled: true
  service-client-id: wes-service
  batch-processing-enabled: false
  scheduling:
    batch-emit:
      cron: 0/2 * * ? * *
  publisher:
    events-uri: ${auditing.oauth-client.audience}/events
    events-batch-uri: ${auditing.oauth-client.audience}/events/batch
    give-up-after: 5
    delay-between-tries-in-millis: 250

  oauth-client:
    client-id: wes-service
    client-secret: dev-secret-never-use-in-prod
    scopes: audit:create
    audience: http://localhost:8888
    resource: ${auditing.publisher.events-uri}
    actions: ["audit:create"]
    token-uri: ${wes.auth.token-issuers[0].issuer-uri}/oauth/token
    token-issuers-uris: ${wes.auth.token-issuers[0].issuer-uri}
    policy-evaluation-requester: ${wes.auth.validator.policy-evaluation-requester}
    policy-evaluation-uri:  ${wes.auth.validator.policy-evaluation-uri}
  json-printer-style: dense_print
# App information
info:
  app:
    name: "wes-service"
    description: "Interface Layering WES API ontop of an execution engine"
    url: http://localhost:${server.port}
    version: "${project.version}"

server:
  port: 8090

spring:
  servlet:
    multipart:
      enabled: true
  jackson:
    default-property-inclusion: non_null
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
  datasource:
    driver-class-name: org.postgresql.Driver
    username: wes-service
    password: ""
    url: jdbc:postgresql://localhost/wes-service
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            # Fix for cosmetic error on startup `HHH000424: Disabling contextual LOB creation as createClob() method threw error`
            non_contextual_creation: true
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect

management:
  endpoints:
    web:
      exposure:
        include: health, info