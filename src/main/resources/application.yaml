server:
  port: 8090
  error:
    include-message: always         # To include "message" attribute
    include-binding-errors: always  # To include "errors" attribute

spring:
  application:
    name: cromwell-wes-service
  jackson:
    default-property-inclusion: non_null
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
  servlet:
    multipart:
      enabled: true
  zipkin:
    enabled: false

logging:
  level:
    org.springframework.security: INFO # set to DEBUG to find out why tokens are rejected

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: info,health,prometheus,loggers
  endpoint:
    info:
      enabled: true
    health:
      probes:
        enabled: true
      enabled: true
    prometheus:
      enabled: true
    loggers:
      enabled: true

# App information
info:
  app:
    name: "wes-service"
    description: "Interface Layering WES API on top of an execution engine"
    url: ${wes.url}
    version: "${project.version}"

build.version: @project.version@

wes:
  url: http://localhost:${server.port}
  service-info:
    auth-instruction-url: "${wes.auth.token-issuer.issuer-uri}/.well-known/openid-configuration"
    supported-wes-versions:
      - "1.0.0"
    supported-file-system-protocols:
      - "file"
    workflow-engine-versions:
      cromwell: 47
    workflow-type-versions:
      WDL:
        - "draft-2"
        - "1.0"
    tags:
      object-access-token-attachment-name: "tokens.json"
      cromwell-options-attachment-name: "options.json"
      dependencies-zip-attachment-name: "dependencies.zip"

  blob-storage-client:
    name: LOCAL
    gcp:
      project:
      stagingLocation:
    abs:
      container:
      connection-string:
      staging-path:
    local:
      staging-path: uploads/

  auth:
    issuer-uri: http://localhost:8081
    token-issuer:
      # Default Token issuer to use
      issuer-uri: ${wes.auth.issuer-uri}
      jwk-set-uri: ${wes.auth.issuer-uri}/oauth/jwks
      audiences:
        - ${wes.url}
    validator:
      policy-evaluation-requester: ${wes.url}
      policy-evaluation-uri: ${wes.auth.issuer-uri}/policies/evaluations
    http-client-config:
      keep-alive-timeout: PT20S # override OkHttp default to avoid connection reset with wallet in private GKE cluster
      max-idle-connections: 5 # same as OkHttp default
  cromwell:
    user-label: user_id
    workflow-url-label: workflow_url
    options-filename: options.json
    dependencies-filename: dependencies.zip
    files-to-ignore-for-staging:
      - ${wes.cromwell.options-filename}
      - ${wes.cromwell.dependencies-filename}
    valid-cromwell-options:
      - workflow_failure_mode
      - final_workflow_outputs_dir
      - use_relative_output_paths
      - final_workflow_log_dir
      - final_call_logs_dir
      - write_to_cache
      - read_from_cache
      - jes_gcs_root
      - google_compute_service_account
      - google_project
      - refresh_token
      - auth_bucket
      - monitoring_script
      - monitoring_image
      - google_labels
      - default_runtime_attributes
      - continueOnReturnCode
      - backend
    default-workflow-options:
      write_to_cache: false
      read_from_cache: false
  workflows:
    authorizers:
      url-allow-list:
        enabled: false
      checksum:
        enabled: false
  registry:
    client-id: wes-service
    client-secret: dev-secret-never-use-in-prod
    grant-type: "urn:ietf:params:oauth:grant-type:device_code"
    token-uri: ${wes.auth.token-issuer.issuer-uri}/oauth/token
    device-code-uri: ${wes.auth.token-issuer.issuer-uri}/oauth/device/code
    services:
      wes:
        id: wes
        name: DNAstack Workbench - WES Service
        type:
          group: org.ga4gh
          artifact: wes
          version: v1.1
        description: Compliant with the <a href='https://github.com/ga4gh/workflow-execution-service-schemas' target='_blank'>WES</a> standard by the <a href='https://www.ga4gh.org/' target='_blank'>Global Alliance for Genomics and Health</a>."
        organization:
          name: DNAstack
          url: https://dnastack.com
        version: ${build.version}
        url: ${wes.url}/ga4gh/wes/v1/
        authentication:
          - accessTokenUrl: ${wes.registry.token-uri}
            clientId: ${wes.registry.client-id}
            clientSecret: ${wes.registry.client-secret}
            deviceCodeUrl: ${wes.registry.device-code-uri}
            grantType: ${wes.registry.grant-type}
            resource: ${wes.url}/ga4gh/wes/v1/
            type: oauth2
# Auditing
app:
  url: ${wes.url}

auditing:
  enabled: true
  publish-external: false
  batch-processing-enabled: true
  scheduling:
    batch-emit:
      cron: 0/10 * * ? * *
  publisher:
    events-uri: ${auditing.oauth-client.audience}/events
    events-batch-uri: ${auditing.oauth-client.audience}/events/batch
    give-up-after: 5
    delay-between-tries-in-millis: 250
  oauth-client:
    client-id: wes-service
    client-secret: dev-secret-never-use-in-prod
    scopes: audit:create
    audience: http://localhost:8888
    resource: ${auditing.publisher.events-uri}
    actions: [ "audit:create" ]
    token-uri: ${wes.auth.token-issuer.issuer-uri}/oauth/token
    token-issuers-uris: ${wes.auth.token-issuer.issuer-uri}
    policy-evaluation-requester: ${wes.auth.validator.policy-evaluation-requester}
    policy-evaluation-uri: ${wes.auth.validator.policy-evaluation-uri}
  json-printer-style: dense_print


springdoc:
  oAuthFlow:
    authorizationUrl: http://localhost:8081/oauth/authorize
    tokenUrl: http://localhost:8081/oauth/token
  api-docs:
    path: /docs/openapi.json
  swagger-ui:
    path: /docs/swagger-ui.html

security:
  authentication:
    enabled: true
  authorization:
    enabled: true

---
spring:
  config:
    activate:
      on-profile: no-auth
security:
  authentication:
    enabled: false
  authorization:
    enabled: false


---
spring:
  config:
    activate:
      on-profile: "local-dev"

logging:
  level:
    com.dnastack: DEBUG

---
spring:
  config:
    activate:
      on-profile: "publish-external"
auditing:
  publish-external: true